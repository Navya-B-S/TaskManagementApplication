@*//add namespace to use the model*@
@model TaskManagementApplication.Models.Task
@*//add title with Create New Task*@
<h1>Create New Task</h1>
@*//add link to go back to the list of tasks*@
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
@*//add a form to add new task with the action Create and controller Task*@
@using (Html.BeginForm("Create", "Task", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
@*//create a table with cellpadding 10px to add new task*@
<table class="table" cellpadding="10" border="1">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <td>
            @Html.EditorFor(model => model.Title)
            @*//add required field validation for title*@
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <td>
            @Html.EditorFor(model => model.Description)
            @*//add required field validation for description*@
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Priority)
        </th>
        <td>
            @*//add a dropdown list to select the priority of the task having 3 options - High, Medium and Low*@
            @Html.DropDownListFor(model => model.Priority, new List<SelectListItem>
            {
                new SelectListItem{ Text="High", Value = "High" },
                new SelectListItem{ Text="Medium", Value = "Medium" },
                new SelectListItem{ Text="Low", Value = "Low" }
            }, "Select Priority")
            @*//add required field validation for priority*@
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.DueDate)
        </th>
        <td>
            @*//add a date picker to select the due date of the task with the format dd/mm/yyyy and set the date to today's date*@
            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = DateTime.Now.ToString("yyyy-MM-dd") } })
            @*//add required field validation for due date*@
            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
        </td>
    </tr>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <td>
            @*//add a dropdown list to select the status of the task having 3 options - Not Started, In Progress and Completed*@
            @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
            {
                new SelectListItem{ Text="Not Started", Value = "Not Started" },
                new SelectListItem{ Text="In Progress", Value = "In Progress" },
                new SelectListItem{ Text="Completed", Value = "Completed" }
            }, "Select Status")
            @*//add required field validation for status*@
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </td>
    </tr>
</table>
@*//add a submit button to save the task*@
<p>
    @*//add space between the button and the form*@
<br />
    <div class="col-md-offset-3 col-md-20">
    <input type="submit" value="Create" class="btn btn-default" />
    </div>
</p>
</div>
}